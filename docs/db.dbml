Project code_odessey {
  database_type: 'PostgreSQL'
  Note: '''
    # Code Odessey Database
  '''
}

Table users as U {
  id uuid [pk, default: `uuid_generate_v4()`]
  username varchar(20) [not null]
  hashed_password varchar [not null]
  full_name varchar(250) [not null]
  email varchar [unique, not null]
  is_eamil_verified bool [not null, default: false]
  // Since we using golang we specify the timestapmz below as the default
  password_changed_at timestampz [not null, default: '0001-01-01 00:00:00Z']
  created_at timestampz [not null, default: `now()`]
  updated_at timestamptz [not null, default: '0001-01-01 00:00:00Z']

  indexes {
    email
    username
  }
}

Table blog as B {
  id uuid [pk, default: `uuid_generate_v4()`]
  author_id uuid [not null, ref: > U.id]
  title varchar(250) [not null]
  slug varchar(255) [unique, not null]
  description varchar(255) [not null]
  body text [not null]
  banner_image varchar(255) [not null]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: '0001-01-01 00:00:00Z']

  indexes {
    (author_id, created_at)
    slug
    title
    created_at
  }
}

Table comment as C {
  id uuid [pk, default: `uuid_generate_v4()`]
  blog_id uuid [not null, ref: > B.id]
  user_id uuid [not null, ref: > U.id]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: '0001-01-01 00:00:00Z']

  indexes {
    (blog_id, created_at)
  }

}

Table favorite as F {
  id uuid [pk]
  blog_id uuid [ref: > B.id]
  user_id uuid [not null, ref: > U.id]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: '0001-01-01 00:00:00Z']

  Indexes {
    (blog_id, user_id)
  }
}

Table sessions as S {
  id uuid [pk]
  user_id uuid [not null, ref: > U.id]
  refresh_token varchar [not null]
  user_agent varchar [not null]
  client_ip varchar [not null]
  is_blocked boolean [not null, default: false]
  expires_at timestamptz [not null, default: '0001-01-01 00:00:00Z']
  created_at timestamptz [not null, default: `now()`]

  indexes {
    user_id
  }
}